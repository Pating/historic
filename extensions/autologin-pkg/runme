#!/bin/sh
# Copyright (C) 2006 Z RESEARCH Inc. <http://www.zresearch.com>
#  
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#  
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#  
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#  

_init ()
{
    return 0
}

first_time ()
{
    mkdir -p /var/gluster/ssh /var/gluster/hostkeys;
    echo -n "Generating DSA authorization keys ... " >> /var/log/proglog
    ssh-keygen -t dsa -f /var/gluster/ssh/id_dsa -N '' >>/var/log/proglog 2>&1
    echo "done."  >> /var/log/proglog
    cp -f /var/gluster/ssh/id_dsa.pub /var/gluster/ssh/authorized_keys2
    echo -n "Generating RSA host keys ... " >> /var/log/proglog
    ssh-keygen -t rsa -f /var/gluster/hostkeys/ssh_host_rsa_key -N '' >>/var/log/proglog 2>&1
    echo "done." >> /var/log/proglog
    echo -n "Generating DSA host keys ... " >> /var/log/proglog
    ssh-keygen -t dsa -f /var/gluster/hostkeys/ssh_host_dsa_key -N '' >>/var/log/proglog 2>&1
    echo "done." >> /var/log/proglog
    echo -n "Generating RSA1 host keys ... " >> /var/log/proglog
    ssh-keygen -t rsa1 -f /var/gluster/hostkeys/ssh_host_key -N '' >>/var/log/proglog 2>&1
    echo "done." >> /var/log/proglog

    rsa_key=$(cat /var/gluster/hostkeys/ssh_host_rsa_key.pub)
    hostname=$(sed -n -e 's/hostname = \(.*\)$/\1/p' /var/gluster/clientinfo)
    domain=$(sed -n -e 's/domain = \(.*\)$/\1/p' /var/gluster/clientinfo)

    echo ${hostname}* $rsa_key > /var/gluster/ssh/known_hosts
    echo master-node $rsa_key >> /var/gluster/ssh/known_hosts
    echo ${hostname}*.${domain} $rsa_key >> /var/gluster/ssh/known_hosts
    echo master-node.${domain} $rsa_key >> /var/gluster/ssh/known_hosts

    tar -cf /var/gluster/ssh.tar -C /var/gluster/ssh/ .;
    tar -cf /var/gluster/hostkeys.tar -C /var/gluster/hostkeys/ .;
    
    rm -r /var/gluster/ssh/ /var/gluster/hostkeys/;
}

main ()
{
    local my_dir="$(dirname $0)";
    if [ -f /var/gluster/ssh.tar ]; then
	echo "Reusing previous session's ssh authorization and host keys"
    else
	first_time
    fi
    for key in $(gmount -o); do
	    # install on master node
	    cp -af $os_base/${key}/root/.ssh $os_base/${key}/root/.ssh.orig-gluster;
	    cp -af $os_base/${key}/etc/ssh $os_base/${key}/etc/ssh.orig-gluster;
	    rm -rf $os_base/${key}/{root/.ssh,etc/ssh} ;
	    mkdir -p $os_base/${key}/{root/.ssh,etc/ssh} ;
	    chmod 700 $os_base/${key}/root/.ssh;
	    cat /var/gluster/ssh.tar | tar -C $os_base/${key}/root/.ssh -x;
	    cat /var/gluster/hostkeys.tar | tar -C $os_base/${key}/etc/ssh -x;

	    # install on ALL slave nodes
	    STDIN=/dev/null gcsh cp -af $os_base/${key}/root/.ssh $os_base/${key}/root/.ssh.orig-gluster;
	    STDIN=/dev/null gcsh cp -af $os_base/${key}/etc/ssh $os_base/${key}/etc/ssh.orig-gluster;
	    STDIN=/dev/null gcsh rm -rf $os_base/${key}/{root/.ssh,etc/ssh} ;
	    STDIN=/dev/null gcsh mkdir -p $os_base/${key}/{root/.ssh,etc/ssh};
	    STDIN=/dev/null gcsh chmod 700 $os_base/${key}/root/.ssh;
	    cat /var/gluster/ssh.tar | gcsh tar -C $os_base/${key}/root/.ssh -x;
	    cat /var/gluster/hostkeys.tar | gcsh tar -C $os_base/${key}/etc/ssh -x;
    done
}

_init "$@" && main "$@";
