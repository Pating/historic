#!/usr/bin/python
##
## Copyright (C) 2006 Z RESEARCH Inc. <http://www.zresearch.com>
##  
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##  
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##  
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
##  
##

from Gluster.GFrontEnd import dialog;
from Gluster import GExtension
from Gluster.GTmp import Dir
from Gluster.gpartdump import *
import os, sys;

d = dialog.Dialog ();

def get_stage3_gexs ():
    fd = os.popen ("gex --list-apps", "r");
    return fd.readlines ();

def load_app ():
    gexs = [];
    for gex in  get_stage3_gexs ():
        gexs.append ((gex.strip ().split (":",1)[0], gex.strip ().split (":",1)[1]) );
        
    if len (gexs) == 0:
        d.msgbox ("no applications to load");
        return

    (ret, theone) = d.menu ("Select application", choices=gexs, title='[ GDesktop ]',nocancel=True);
    if ret != 0:
        return
    d.infobox ("Preparing to start " + theone)
    os.system ("gex --install /stage3/" +  theone + ".gex")
    return

def load_initial_app ():
    teh_app = None
    cmdline=file ('/proc/cmdline').readline ().strip ()
    cmd_pieces = cmdline.split ()
    for piece in cmd_pieces:
        sub_pieces = piece.split ('=')
        if len (piece.split ('=')) > 1:
            if sub_pieces[0] == 'gluster_app':
                teh_app = sub_pieces[1]

    if not teh_app:
        return
    if not os.access ('/stage3/%s.gex' % teh_app, os.R_OK):
        d.infobox ("%s: no such application/extension available")
        return
    
    if teh_app:
        d.infobox ("Autoloading %s" % teh_app)
        os.system ("gex --install /stage3/%s.gex" % teh_app)
    return

def main ():

    load_initial_app ()
    while True:
        load_app ()

main ()
    



