#!/usr/bin/python
##
## Copyright (C) 2006 Z RESEARCH Inc. <http://www.zresearch.com>
##  
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##  
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##  
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software
## Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
##  
##

from Gluster.GFrontEnd import dialog
import os, sys

dlg = dialog.Dialog ()

def main ():
    (ret, sel) = dlg.menu ('Select',
                           choices=[('halt', 'Shutdown the cluster'),
                                    ('reboot', 'Reboot the cluster'), 
                                    ('eject and reboot', 'Eject cdrom and reboot the cluster')],
                           title='[ Shutdown ]')
    if ret != 0:
        return

    try:
        hosts = file ('/tmp/ghosts/known_hosts').readlines ()
    except:
        hosts = []

    if sel == 'halt':
        for host in hosts:
            os.system ('ssh %s /sbin/halt' % host.strip())
        os.system ('shutdown -h now')
        while True:
            os.system ('sleep 108')
    if sel == 'reboot':
        for host in hosts:
            os.system ('ssh %s /sbin/reboot' % host.strip())
        os.system ('reboot')
        while True:
            os.system ('sleep 108')
    if sel == 'eject and reboot':
        for host in hosts:
            #os.system ('ssh %s eject /mnt/cdrom > /dev/null 2>&1' % host.strip ())
            os.system ('ssh %s /sbin/reboot' % host.strip())
        os.system ('eject > /dev/null 2>&1')
        os.system ('reboot')
        while True:
            os.system ('sleep 108')
    return

main ()
